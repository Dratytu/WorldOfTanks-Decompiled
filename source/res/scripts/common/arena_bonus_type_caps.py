# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/arena_bonus_type_caps.py
from constants import ARENA_BONUS_TYPE, ARENA_BONUS_TYPE_NAMES
from soft_exception import SoftException

class ARENA_BONUS_TYPE_CAPS():
    RESULTS = 'RESULTS'
    DAMAGE_VEHICLE = 'DAMAGE_VEHICLE'
    CREDITS = 'CREDITS'
    XP = 'XP'
    RANSOM_IN = 'RANSOM_IN'
    REWARD_FOR_ACHIEVEMENT = 'REWARD_FOR_ACHIEVEMENT'
    QUESTS = 'QUESTS'
    AVATAR_QUESTS = 'AVATAR_QUESTS'
    DOSSIER_TOTAL = 'DOSSIER_TOTAL'
    DOSSIER_KILL_LIST = 'DOSSIER_KILL_LIST'
    DOSSIER_15X15 = 'DOSSIER_15X15'
    DOSSIER_7X7 = 'DOSSIER_7X7'
    DOSSIER_CLAN = 'DOSSIER_CLAN'
    DOSSIER_ACHIEVEMENTS_15X15 = 'DOSSIER_ACHIEVEMENTS_15X15'
    DOSSIER_MARKS_ON_GUN = 'DOSSIER_MARKS_ON_GUN'
    DOSSIER_MARK_OF_MASTERY = 'DOSSIER_MARK_OF_MASTERY'
    DOSSIER_ACHIEVEMENTS_RANKED15X15 = 'DOSSIER_ACHIEVEMENTS_RANKED15X15'
    DOSSIER_ACHIEVEMENTS_7X7 = 'DOSSIER_ACHIEVEMENTS_7X7'
    DOSSIER_MAX15X15 = 'DOSSIER_MAX15X15'
    DOSSIER_MAX7X7 = 'DOSSIER_MAX7X7'
    RANKED = 'RANKED'
    DOSSIER_RANKED = 'DOSSIER_RANKED'
    DOSSIER_MAXRANKED = 'DOSSIER_MAXRANKED'
    CYBERSPORT_RATING = 'CYBERSPORT_RATING'
    TKILL_RATING = 'TKILL_RATING'
    DOSSIER_SORTIE = 'DOSSIER_SORTIE'
    DOSSIER_MAXSORTIE = 'DOSSIER_MAXSORTIE'
    DOSSIER_ACHIEVEMENTS_SORTIE = 'DOSSIER_ACHIEVEMENTS_SORTIE'
    DOSSIER_FORT_BATTLE = 'DOSSIER_FORT_BATTLE'
    DOSSIER_MAXFORTBATTLE = 'DOSSIER_MAXFORTBATTLE'
    REF_SYSTEM_BONUS = 'REF_SYSTEM_BONUS'
    DOSSIER_RATED7X7 = 'DOSSIER_RATED7X7'
    DOSSIER_MAXRATED7X7 = 'DOSSIER_MAXRATED7X7'
    DOSSIER_ACHIEVEMENTS_RATED7X7 = 'DOSSIER_ACHIEVEMENTS_RATED7X7'
    RESPAWN = 'RESPAWN'
    INTERACTIVE_STATS = 'INTERACTIVE_STATS'
    FLAG_MECHANICS = 'FLAG_MECHANICS'
    WIN_POINTS_MECHANICS = 'WIN_POINTS_MECHANICS'
    REPAIR_MECHANICS = 'REPAIR_MECHANICS'
    NO_ALLY_DAMAGE = 'NO_ALLY_DAMAGE'
    DAILY_MULTIPLIED_XP = 'DAILY_MULTIPLIED_XP'
    MULTITEAMS = 'MULTITEAMS'
    DOSSIER_GLOBAL_MAP = 'DOSSIER_GLOBAL_MAP'
    RAGE_MECHANICS = 'RAGE_MECHANICS'
    RESOURCE_POINTS = 'RESOURCE_POINTS'
    RANSOM_OUT = 'RANSOM_OUT'
    RENT_BATTLES_COUNTED = 'RENT_BATTLES_COUNTED'
    DOSSIER_FALLOUT = 'DOSSIER_FALLOUT'
    DOSSIER_MAXFALLOUT = 'DOSSIER_MAXFALLOUT'
    CREW_IMMUNE_TO_DAMAGE = 'CREW_IMMUNE_TO_DAMAGE'
    BOOSTERS = 'BOOSTERS'
    GAS_ATTACK_MECHANICS = 'GAS_ATTACK_MECHANICS'
    DOSSIER_ACHIEVEMENTS_FALLOUT = 'DOSSIER_ACHIEVEMENTS_FALLOUT'
    SQUADS = 'SQUADS'
    SQUAD_XP = 'SQUAD_XP'
    SQUAD_CREDITS = 'SQUAD_CREDITS'
    PREM_SQUAD_CREDITS = 'PREM_SQUAD_CREDITS'
    COMMON_CHAT = 'COMMON_CHAT'
    CREDITS_FACTOR_BOOTCAMP = 'CREDITS_FACTOR_BOOTCAMP'
    XP_FACTOR_BOOTCAMP = 'XP_FACTOR_BOOTCAMP'
    INFINITE_AMMO = 'INFINITE_AMMO'
    FREE_AMMO = 'FREE_AMMO'
    TEAM_HEALTH_BAR = 'TEAM_HEALTH_BAR'
    DOSSIER_30X30 = 'DOSSIER_30X30'
    DOSSIER_MAX30X30 = 'DOSSIER_MAX30X30'
    ACHIEVEMENT_CONDITIONS_EXT = 'ACHIEVEMENT_CONDITIONS_EXT'
    VICTORY_DEFEAT_MESSAGE = 'VICTORY_DEFEAT_MESSAGE'
    BOOTCAMP_MECHANICS = 'BOOTCAMP_MECHANICS'
    EPIC = 'EPIC'
    BATTLEROYALE = 'BATTLEROYALE'
    LOOT = 'LOOT'
    LOOT_DROP = 'LOOT_DROP'
    CONE_VISIBILITY = 'CONE_VISIBILITY'
    RADAR = 'RADAR'
    DEATH_ZONES = 'DEATH_ZONES'
    SPAWN_KEY_POINTS = 'SPAWN_KEY_POINTS'
    SECTOR_MECHANICS = 'SECTOR_MECHANICS'
    PROTECTION_ZONE = 'PROTECTION_ZONE'
    DESTRUCTIBLE_ENTITIES = 'DESTRUCTIBLE_ENTITIES'
    STEP_REPAIR_MECHANIC = 'STEP_REPAIR_MECHANIC'
    PLAYER_RANK_MECHANICS = 'PLAYER_RANK_MECHANICS'
    RECOVERY_MECHANIC = 'RECOVERY_MECHANIC'
    OVERTIME_MECHANIC = 'OVERTIME_MECHANIC'
    DOSSIER_EPIC_BATTLE = 'DOSSIER_EPIC_BATTLE'
    DOSSIER_MAX_EPIC_BATTLE = 'DOSSIER_MAX_EPIC_BATTLE'
    DOSSIER_ACHIEVEMENTS_EPIC_BATTLE = 'DOSSIER_ACHIEVEMENTS_EPIC_BATTLE'
    DETAILED_XP = 'DETAILED_XP'
    NO_REMOVE_RENTED_STYLE = 'NO_REMOVE_RENTED_STYLE'
    SUPPORT_AI = 'SUPPORT_AI'
    FORCE_AI = 'FORCE_AI'
    SUPPORT_AI = 'SUPPORT_AI'
    FORCE_AI = 'FORCE_AI'
    ROLE_SYSTEM = 'ROLE_SYSTEM'
    IN_BATTLE_XP = 'IN_BATTLE_XP'
    REFSYSTEM_20_BONUS = 'REFSYSTEM_20_BONUS'
    ADDITIONAL_XP_POSTBATTLE = 'ADDITIONAL_XP_POSTBATTLE'
    FREE_BATTLE_RESOURCES = 'FREE_BATTLE_RESOURCES'
    ALLY_STUN_PENALTY = 'ALLY_STUN_PENALTY'
    ALLY_STUN_TEAM_KILL = 'ALLY_STUN_TEAM_KILL'
    CUSTOM_ALLY_DAMAGE_EFFECT = 'CUSTOM_ALLY_DAMAGE_EFFECT'
    ALLY_TEAM_KILL = 'ALLY_TEAM_KILL'
    VEHICLE_NO_DAMAGE_FROM_STATICS = 'VEHICLE_NO_DAMAGE_FROM_STATICS'
    META = 'META'
    ALL_TRACERS_VISIBLE = 'ALL_TRACERS_VISIBLE'
    IN_BATTLE_UPGRADES = 'IN_BATTLE_UPGRADES'
    ARENA_INFO = 'ARENA_INFO'
    ANONYMIZER = 'ANONYMIZER'
    BATTLE_PASS = 'BATTLE_PASS'
    CUSTOMIZATION_PROGRESSION = 'CUSTOMIZATION_PROGRESSION'
    VEHICLES_SPAWN_LIST_STORAGE = 'VEHICLES_SPAWN_LIST_STORAGE'
    SCENARIO_SYSTEM = 'SCENARIO_SYSTEM'
    WAVE_BOT_SPAWN = 'WAVE_BOT_SPAWN'
    EVENT_ALLY_BOTS = 'EVENT_ALLY_BOTS'
    BATTLE_HINTS = 'BATTLE_HINTS'
    VEHICLE_REMOVAL = 'VEHICLE_REMOVAL'
    SAFE_TO_LEAVE = 'SAFE_TO_LEAVE'
    DOG_TAG = 'DOG_TAG'
    DISABLE_VISUAL_SCRIPT = 'DISABLE_VISUAL_SCRIPT'
    SPAM_PROTECTION = 'SPAM_PROTECTION'
    EVENT_TRIGGERS = 'EVENT_TRIGGERS'
    BOSS_AURA = 'BOSS_AURA'
    ITEM_SPAWN = 'ITEM_SPAWN'
    EVENT_CUSTOM_TIMERS = 'EVENT_CUSTOM_TIMERS'
    DROP_SYSTEM = 'DROP_SYSTEM'
    SOULS_SYSTEM = 'SOULS_SYSTEM'
    EVENT_CONTROL_POINT = 'EVENT_CONTROL_POINT'
    NEARBY_VEHICLES_DETECTOR = 'NEARBY_VEHICLES_DETECTOR'
    LORE_SYSTEM = 'LORE_SYSTEM'
    IGNORE_PREM_FACTOR = 'IGNORE_PREM_FACTOR'
    DISABLE_TURRET_DETACH = 'DISABLE_TURRET_DETACH'
    REGULAR = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     REWARD_FOR_ACHIEVEMENT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_MARKS_ON_GUN,
     DOSSIER_MARK_OF_MASTERY,
     DOSSIER_MAX15X15,
     TKILL_RATING,
     REF_SYSTEM_BONUS,
     CUSTOMIZATION_PROGRESSION,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     SQUADS,
     SQUAD_XP,
     VICTORY_DEFEAT_MESSAGE,
     SUPPORT_AI,
     REFSYSTEM_20_BONUS,
     PREM_SQUAD_CREDITS,
     ADDITIONAL_XP_POSTBATTLE,
     NO_ALLY_DAMAGE,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     ANONYMIZER,
     BATTLE_PASS,
     ALLY_STUN_TEAM_KILL,
     SPAM_PROTECTION,
     DOG_TAG,
     ARENA_INFO))
    TRAINING = frozenset((RESULTS,
     REPAIR_MECHANICS,
     COMMON_CHAT,
     VICTORY_DEFEAT_MESSAGE,
     NO_REMOVE_RENTED_STYLE,
     SUPPORT_AI))
    TOURNAMENT = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     QUESTS,
     VICTORY_DEFEAT_MESSAGE))
    TOURNAMENT_REGULAR = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     CREDITS,
     XP,
     QUESTS,
     BOOSTERS,
     DAMAGE_VEHICLE,
     VICTORY_DEFEAT_MESSAGE))
    TOURNAMENT_CLAN = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     CREDITS,
     XP,
     QUESTS,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    TOURNAMENT_EVENT = frozenset((RESULTS,
     QUESTS,
     SQUADS,
     VICTORY_DEFEAT_MESSAGE,
     NO_ALLY_DAMAGE,
     CUSTOM_ALLY_DAMAGE_EFFECT))
    CLAN = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_CLAN,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    GLOBAL_MAP = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_GLOBAL_MAP,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     VICTORY_DEFEAT_MESSAGE))
    TUTORIAL = frozenset((VICTORY_DEFEAT_MESSAGE,))
    CYBERSPORT = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_7X7,
     DOSSIER_MAX7X7,
     CYBERSPORT_RATING,
     DOSSIER_ACHIEVEMENTS_7X7,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    EVENT_BATTLES = frozenset((RESULTS,
     QUESTS,
     SQUADS,
     VICTORY_DEFEAT_MESSAGE,
     NO_ALLY_DAMAGE,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     CREW_IMMUNE_TO_DAMAGE,
     SCENARIO_SYSTEM,
     BATTLE_HINTS,
     EVENT_TRIGGERS,
     ITEM_SPAWN,
     VEHICLE_REMOVAL,
     WAVE_BOT_SPAWN,
     EVENT_ALLY_BOTS,
     EVENT_CUSTOM_TIMERS,
     RESPAWN,
     DISABLE_TURRET_DETACH,
     DROP_SYSTEM,
     SOULS_SYSTEM,
     BOSS_AURA,
     STEP_REPAIR_MECHANIC,
     EVENT_CONTROL_POINT,
     NEARBY_VEHICLES_DETECTOR,
     LORE_SYSTEM,
     IGNORE_PREM_FACTOR,
     INFINITE_AMMO,
     SPAM_PROTECTION))
    EVENT_BATTLES_2 = frozenset((RESULTS,
     QUESTS,
     SQUADS,
     VICTORY_DEFEAT_MESSAGE,
     ANONYMIZER))
    FALLOUT_CLASSIC = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     RESPAWN,
     INTERACTIVE_STATS,
     FLAG_MECHANICS,
     WIN_POINTS_MECHANICS,
     REPAIR_MECHANICS,
     TKILL_RATING,
     RAGE_MECHANICS,
     RESOURCE_POINTS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     DOSSIER_FALLOUT,
     DOSSIER_MAXFALLOUT,
     DOSSIER_TOTAL,
     DOSSIER_ACHIEVEMENTS_FALLOUT,
     SQUADS,
     REWARD_FOR_ACHIEVEMENT))
    FALLOUT_MULTITEAM = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     RESPAWN,
     INTERACTIVE_STATS,
     FLAG_MECHANICS,
     WIN_POINTS_MECHANICS,
     REPAIR_MECHANICS,
     TKILL_RATING,
     MULTITEAMS,
     RAGE_MECHANICS,
     RESOURCE_POINTS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     DOSSIER_FALLOUT,
     DOSSIER_MAXFALLOUT,
     DOSSIER_TOTAL,
     GAS_ATTACK_MECHANICS,
     DOSSIER_ACHIEVEMENTS_FALLOUT,
     SQUADS,
     REWARD_FOR_ACHIEVEMENT))
    _OBSOLETE__SORTIE = frozenset()
    _OBSOLETE__FORT_BATTLE = frozenset()
    RATED_SANDBOX = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_MAX15X15,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     CREW_IMMUNE_TO_DAMAGE,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    SANDBOX = frozenset((RESULTS,
     TKILL_RATING,
     CREW_IMMUNE_TO_DAMAGE,
     VICTORY_DEFEAT_MESSAGE))
    BOOTCAMP = frozenset((RESULTS,
     CREDITS,
     CREDITS_FACTOR_BOOTCAMP,
     XP,
     XP_FACTOR_BOOTCAMP,
     INFINITE_AMMO,
     NO_ALLY_DAMAGE,
     BOOTCAMP_MECHANICS,
     SUPPORT_AI,
     VICTORY_DEFEAT_MESSAGE))
    SORTIE_2 = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_SORTIE,
     DOSSIER_MAXSORTIE,
     DOSSIER_ACHIEVEMENTS_SORTIE,
     QUESTS,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    FORT_BATTLE_2 = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_FORT_BATTLE,
     DOSSIER_MAXFORTBATTLE,
     QUESTS,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    RANKED_BATTLE = frozenset((RESULTS,
     RANKED,
     DOSSIER_RANKED,
     DOSSIER_MAXRANKED,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     DOSSIER_ACHIEVEMENTS_RANKED15X15,
     REWARD_FOR_ACHIEVEMENT,
     VICTORY_DEFEAT_MESSAGE,
     DETAILED_XP,
     NO_ALLY_DAMAGE,
     ROLE_SYSTEM,
     ALLY_STUN_PENALTY,
     ALLY_STUN_TEAM_KILL,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     ALLY_TEAM_KILL,
     ANONYMIZER,
     CUSTOMIZATION_PROGRESSION,
     SPAM_PROTECTION))
    EPIC_RANDOM = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     REWARD_FOR_ACHIEVEMENT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_30X30,
     DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_MARK_OF_MASTERY,
     DOSSIER_MAX30X30,
     TKILL_RATING,
     REF_SYSTEM_BONUS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     SQUADS,
     SQUAD_XP,
     TEAM_HEALTH_BAR,
     ACHIEVEMENT_CONDITIONS_EXT,
     VICTORY_DEFEAT_MESSAGE,
     SUPPORT_AI,
     REFSYSTEM_20_BONUS,
     PREM_SQUAD_CREDITS,
     ADDITIONAL_XP_POSTBATTLE,
     NO_ALLY_DAMAGE,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     ANONYMIZER,
     SPAM_PROTECTION,
     DOG_TAG,
     ARENA_INFO))
    EVENT_RANDOM = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE,
     SUPPORT_AI,
     ADDITIONAL_XP_POSTBATTLE,
     NO_ALLY_DAMAGE,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     ANONYMIZER))
    EPIC_RANDOM_TRAINING = frozenset((RESULTS,
     REPAIR_MECHANICS,
     COMMON_CHAT,
     TEAM_HEALTH_BAR,
     VICTORY_DEFEAT_MESSAGE))
    EPIC_BATTLE = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RESPAWN,
     SECTOR_MECHANICS,
     DESTRUCTIBLE_ENTITIES,
     STEP_REPAIR_MECHANIC,
     PLAYER_RANK_MECHANICS,
     PROTECTION_ZONE,
     RECOVERY_MECHANIC,
     OVERTIME_MECHANIC,
     SQUADS,
     SQUAD_XP,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_EPIC_BATTLE,
     DOSSIER_MAX_EPIC_BATTLE,
     DOSSIER_ACHIEVEMENTS_EPIC_BATTLE,
     TKILL_RATING,
     EPIC,
     VICTORY_DEFEAT_MESSAGE,
     NO_ALLY_DAMAGE,
     BOOSTERS,
     RENT_BATTLES_COUNTED,
     SUPPORT_AI,
     PREM_SQUAD_CREDITS,
     META,
     CUSTOM_ALLY_DAMAGE_EFFECT,
     ANONYMIZER,
     AVATAR_QUESTS,
     SPAM_PROTECTION))
    EPIC_BATTLE_TRAINING = frozenset((RESULTS,
     RESPAWN,
     SECTOR_MECHANICS,
     DESTRUCTIBLE_ENTITIES,
     STEP_REPAIR_MECHANIC,
     PROTECTION_ZONE,
     RECOVERY_MECHANIC,
     OVERTIME_MECHANIC,
     SQUADS,
     TKILL_RATING,
     EPIC,
     VICTORY_DEFEAT_MESSAGE,
     NO_ALLY_DAMAGE,
     NO_REMOVE_RENTED_STYLE,
     SUPPORT_AI,
     FREE_BATTLE_RESOURCES,
     CUSTOM_ALLY_DAMAGE_EFFECT))
    BATTLE_ROYALE = frozenset((RESULTS,
     QUESTS,
     MULTITEAMS,
     COMMON_CHAT,
     DAMAGE_VEHICLE,
     SPAWN_KEY_POINTS,
     CONE_VISIBILITY,
     BATTLEROYALE,
     DEATH_ZONES,
     RADAR,
     LOOT,
     IN_BATTLE_XP,
     CREW_IMMUNE_TO_DAMAGE,
     ALL_TRACERS_VISIBLE,
     FREE_AMMO,
     LOOT_DROP,
     IN_BATTLE_UPGRADES,
     ARENA_INFO,
     SUPPORT_AI,
     FORCE_AI,
     NO_ALLY_DAMAGE,
     PLAYER_RANK_MECHANICS,
     VEHICLE_REMOVAL,
     SAFE_TO_LEAVE))
    BATTLE_ROYALE_SQUAD = BATTLE_ROYALE.union(frozenset((SQUADS, NO_ALLY_DAMAGE)))
    DOSSIER_ACHIEVEMENTS = frozenset((DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_ACHIEVEMENTS_RANKED15X15,
     DOSSIER_ACHIEVEMENTS_7X7,
     DOSSIER_ACHIEVEMENTS_RATED7X7,
     DOSSIER_ACHIEVEMENTS_SORTIE,
     DOSSIER_ACHIEVEMENTS_EPIC_BATTLE))
    __RULES = (lambda caps: not set(ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS) & set(caps) or ARENA_BONUS_TYPE_CAPS.MULTITEAMS not in caps,
     lambda caps: not set(ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS) & set(caps) or ARENA_BONUS_TYPE_CAPS.RESPAWN not in caps or ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS_EPIC_BATTLE in caps,
     lambda caps: ARENA_BONUS_TYPE_CAPS.CYBERSPORT_RATING not in caps or ARENA_BONUS_TYPE_CAPS.MULTITEAMS not in caps,
     lambda caps: ARENA_BONUS_TYPE_CAPS.WIN_POINTS_MECHANICS not in caps or ARENA_BONUS_TYPE_CAPS.INTERACTIVE_STATS in caps,
     lambda caps: (ARENA_BONUS_TYPE_CAPS.QUESTS in caps) != (ARENA_BONUS_TYPE_CAPS.AVATAR_QUESTS in caps) or ARENA_BONUS_TYPE_CAPS.QUESTS not in caps)
    _typeToCaps = {ARENA_BONUS_TYPE.REGULAR: REGULAR,
     ARENA_BONUS_TYPE.TRAINING: TRAINING,
     ARENA_BONUS_TYPE.TOURNAMENT: TOURNAMENT,
     ARENA_BONUS_TYPE.TOURNAMENT_REGULAR: TOURNAMENT_REGULAR,
     ARENA_BONUS_TYPE.TOURNAMENT_CLAN: TOURNAMENT_CLAN,
     ARENA_BONUS_TYPE.TOURNAMENT_EVENT: TOURNAMENT_EVENT,
     ARENA_BONUS_TYPE.CLAN: CLAN,
     ARENA_BONUS_TYPE.GLOBAL_MAP: GLOBAL_MAP,
     ARENA_BONUS_TYPE.TUTORIAL: TUTORIAL,
     ARENA_BONUS_TYPE.CYBERSPORT: CYBERSPORT,
     ARENA_BONUS_TYPE.FALLOUT_CLASSIC: FALLOUT_CLASSIC,
     ARENA_BONUS_TYPE.FALLOUT_MULTITEAM: FALLOUT_MULTITEAM,
     ARENA_BONUS_TYPE.EVENT_BATTLES: EVENT_BATTLES,
     ARENA_BONUS_TYPE.EVENT_BATTLES_2: EVENT_BATTLES_2,
     ARENA_BONUS_TYPE.RATED_SANDBOX: RATED_SANDBOX,
     ARENA_BONUS_TYPE.SANDBOX: SANDBOX,
     ARENA_BONUS_TYPE.SORTIE_2: SORTIE_2,
     ARENA_BONUS_TYPE.FORT_BATTLE_2: FORT_BATTLE_2,
     ARENA_BONUS_TYPE.RANKED: RANKED_BATTLE,
     ARENA_BONUS_TYPE.BOOTCAMP: BOOTCAMP,
     ARENA_BONUS_TYPE.EPIC_RANDOM: EPIC_RANDOM,
     ARENA_BONUS_TYPE.EPIC_RANDOM_TRAINING: EPIC_RANDOM_TRAINING,
     ARENA_BONUS_TYPE.EPIC_BATTLE: EPIC_BATTLE,
     ARENA_BONUS_TYPE.EPIC_BATTLE_TRAINING: EPIC_BATTLE_TRAINING,
     ARENA_BONUS_TYPE.EVENT_RANDOM: EVENT_RANDOM,
     ARENA_BONUS_TYPE.BATTLE_ROYALE_SOLO: BATTLE_ROYALE,
     ARENA_BONUS_TYPE.BATTLE_ROYALE_SQUAD: BATTLE_ROYALE_SQUAD}

    @staticmethod
    def init():
        for nameIdx, caps in ARENA_BONUS_TYPE_CAPS._typeToCaps.iteritems():
            for rule in ARENA_BONUS_TYPE_CAPS.__RULES:
                if not rule(caps):
                    raise SoftException('Caps is invalid for ARENA_BONUS_TYPE={}'.format(nameIdx))

    @staticmethod
    def get(arenaBonusType):
        return ARENA_BONUS_TYPE_CAPS._typeToCaps.get(arenaBonusType, frozenset())

    @staticmethod
    def checkAny(arenaBonusType, *args):
        caps = ARENA_BONUS_TYPE_CAPS.get(arenaBonusType)
        for cap in args:
            if isinstance(cap, str):
                if cap in caps:
                    return True
            if isinstance(cap, (set, frozenset)):
                if len(cap & caps) > 0:
                    return True

        return False

    @staticmethod
    def checkAll(arenaBonusType, *args):
        caps = ARENA_BONUS_TYPE_CAPS.get(arenaBonusType)
        for cap in args:
            if isinstance(cap, str):
                if cap not in caps:
                    return False
            if isinstance(cap, (set, frozenset)):
                if len(cap & caps) != len(cap):
                    return False
            return False

        return True


def parseArenaBonusType(parsedBonusTypes, bonusTypes, arenaBonusTypeCap):
    for k in bonusTypes:
        arenaBonusType = ARENA_BONUS_TYPE_NAMES[k]
        if not ARENA_BONUS_TYPE_CAPS.checkAny(arenaBonusType, arenaBonusTypeCap):
            raise SoftException('Wrong arena bonus type: %s is not enabled for %s' % (arenaBonusTypeCap, k))
        parsedBonusTypes.add(arenaBonusType)


ARENA_BONUS_TYPE_CAPS.init()
